#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
#define PB push_back;
#define POB pop_back;

void merge(int arr[], int l, int m, int r){
     int i = l;
     int j = m + 1;
     int k = l;
     // creating temp array to store the value that we sort
     int temp[5];

     while (i <= m && j <= r){
        if (arr[i] <= arr[j]){
            temp[k] = arr[i];
            i++;
            k++;
        }
        else {
            temp[k] = arr[j];
            j++;
            k++;
        }
     }
     while (i <= m){
        temp[k] = arr[i];
        i++;
        k++;
     }
     while (j <= r){
        temp[k] = arr[j];
        j++;
        k++;
     }
     for (int p = l; p <= r; p++){
        arr[p] = temp[p];
     }
}

void mergeSort(int arr[], int l, int r){
      if (l < r){
        int m = (l + r)/ 2;
        mergeSort(arr, l, m);
        mergeSort(arr, m+1, r);
        merge(arr, l, m, r);
      }
}

int main(){

    int arr[5];
    cout << "Enter the 5 element of the array: \n";
    for (int i = 0; i < 5; i++){
        cin >> arr[i];
    }

    cout << "Before sorting: \n";

    for (int i = 0; i < 5; i++){
        cout << arr[i] << " ";
    }

    mergeSort(arr, 0, 4);
    cout << "\nAfter sorting: \n";

    for (int i = 0; i < 5; i++){
        cout << arr[i] << " ";
    }
}
